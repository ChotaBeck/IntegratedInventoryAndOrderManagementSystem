@model PurchaseOrder

<h2>Create Purchase Order</h2>

<form asp-action="Create" method="post" id="purchaseOrderForm">
    <div class="form-group">
        <label asp-for="VendorId" class="control-label">Vendor</label>
        <select asp-for="VendorId" class="form-control" asp-items="ViewBag.Vendors"></select>
        <span asp-validation-for="VendorId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="OrderDate" class="control-label">Order Date</label>
        <input asp-for="OrderDate" class="form-control" type="date" />
        <span asp-validation-for="OrderDate" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="StatusId" class="control-label">Status</label>
        <select asp-for="StatusId" class="form-control" asp-items="ViewBag.Statuses"></select>
        <span asp-validation-for="StatusId" class="text-danger"></span>
    </div>

    <h3>Purchase Order Items</h3>
    <div id="purchase-order-items">
        <!-- This section will be populated dynamically with JavaScript -->
    </div>
    <button type="button" id="add-item" class="btn btn-secondary">Add Item</button>

    <div class="form-group">
        <label asp-for="TotalCost" class="control-label">Total Cost</label>
        <input asp-for="TotalCost" class="form-control" readonly />
        <span asp-validation-for="TotalCost" class="text-danger"></span>
    </div>

    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        let itemCount = 0;

        function addItem() {
            const itemsContainer = document.getElementById('purchase-order-items');
            const newItem = document.createElement('div');
            newItem.innerHTML = `
                <div class="form-row">
                    <div class="form-group col-md-4">
                        <label>Product</label>
                        <select name="PurchaseOrderItems[${itemCount}].ProductId" class="form-control product-select" required>
                            <option value="">Select a product</option>
                            @foreach (var product in ViewBag.Products)
                            {
                                <option value="@product.Value">@product.Text</option>
                            }
                        </select>
                    </div>
                    <div class="form-group col-md-3">
                        <label>Quantity</label>
                        <input type="number" name="PurchaseOrderItems[${itemCount}].Quantity" class="form-control quantity-input" required min="1" />
                    </div>
                    <div class="form-group col-md-3">
                        <label>Unit Price</label>
                        <input type="number" name="PurchaseOrderItems[${itemCount}].CostPrice" class="form-control unit-price-input" required min="0" step="0.01" />
                    </div>
                    <div class="form-group col-md-2">
                        <label>&nbsp;</label>
                        <button type="button" class="btn btn-danger form-control remove-item">Remove</button>
                    </div>
                </div>
            `;
            itemsContainer.appendChild(newItem);
            itemCount++;
            
            newItem.querySelector('.remove-item').addEventListener('click', function() {
                itemsContainer.removeChild(newItem);
                updateTotalCost();
            });
            
            newItem.querySelector('.quantity-input').addEventListener('input', updateTotalCost);
            newItem.querySelector('.unit-price-input').addEventListener('input', updateTotalCost);
        }

        function updateTotalCost() {
            let total = 0;
            const items = document.querySelectorAll('#purchase-order-items .form-row');
            items.forEach(item => {
                const quantity = parseFloat(item.querySelector('.quantity-input').value) || 0;
                const unitPrice = parseFloat(item.querySelector('.unit-price-input').value) || 0;
                total += quantity * unitPrice;
            });
            document.getElementById('TotalCost').value = total.toFixed(2);
        }

        document.getElementById('add-item').addEventListener('click', addItem);

        document.getElementById('purchaseOrderForm').addEventListener('submit', function(e) {
            e.preventDefault();
            if (confirm("Note that once a purchase order is created it cannot be edited or deleted. Do you want to proceed?")) {
                this.submit();
            }
        });
    </script>
}